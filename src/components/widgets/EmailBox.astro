---
export interface Props {
  email: string;
  textSize?: string;
  color?: string;
}

const { email, textSize, color } = Astro.props;
const textSizeClass = textSize ? `text-${textSize}` : "text-xs";
const colorClass = color ? color : "gray";
const boxColors = {
  green: `flex items-center justify-between p-1 pl-2 border border-green-900 rounded-lg max-w-md bg-green-100`,
  gray: `flex items-center justify-between p-1 pl-2 border border-gray-500 rounded-lg max-w-md bg-gray-100`,
};
const buttonColors = {
  green: `p-1 ml-1 bg-green-900 rounded hover:bg-green-800 transition-colors focus:outline-none focus:ring-2 focus:ring-green-700 text-green-300`,
  gray: `p-1 ml-1 bg-gray-300 rounded hover:bg-gray-400 transition-colors focus:outline-none focus:ring-2 focus:ring-gray-500`,
};
---

<div class={boxColors[colorClass]}>
  <span id="email" class={`select-all ${textSizeClass}`}>{email}</span>
  <button
    onclick={`javascript:navigator.clipboard.writeText('${email}')`}
    class={buttonColors[colorClass]}
    title="Copy to clipboard"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="h-3 w-3"
      fill="none"
      viewBox="0 0 24 24"
      stroke="currentColor"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        d="M16.5 8.25V6a2.25 2.25 0 0 0-2.25-2.25H6A2.25 2.25 0 0 0 3.75 6v8.25A2.25 2.25 0 0 0 6 16.5h2.25m8.25-8.25H18a2.25 2.25 0 0 1 2.25 2.25V18A2.25 2.25 0 0 1 18 20.25h-7.5A2.25 2.25 0 0 1 8.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 0 0-2.25 2.25v6"
      ></path>
    </svg>
  </button>
</div>
